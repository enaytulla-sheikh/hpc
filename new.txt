# Create base directory on shared storage
sudo mkdir -p /home/shared/WRF
cd /home/shared/WRF

# Create directory structure
mkdir -p {Downloads,Libraries,WRF-4.5.2,WPS-4.5,WRF-CHEM-4.5.2,WRF-SOLAR-4.5.2}

vim /home/shared/WRF/wrf_env.sh

#!/bin/bash

# WRF Installation paths
export WRF_DIR=/home/shared/WRF/WRF-4.5.2
export WRF_DIRI=/home/shared/WRF
export WRF_ROOT=$WRF_DIR
export WPS_ROOT=$WRF_DIRI/WPS-4.5
export WRF_CHEM_DIR=$WRF_DIRI/WRF-CHEM-4.5.2
export WRF_SOLAR_DIR=$WRF_DIRI/WRF-SOLAR-4.5.2

# Library paths
export NETCDF=$WRF_DIRI/Libraries/netcdf
export HDF5=$WRF_DIRI/Libraries/hdf5
export PNETCDF=$WRF_DIRI/Libraries/pnetcdf
export JASPER=$WRF_DIRI/Libraries/jasper
export LIBPNG=$WRF_DIRI/Libraries/libpng
export ZLIB=$WRF_DIRI/Libraries/zlib
export SZIP=$WRF_DIRI/Libraries/szip
export CURL=$WRF_DIRI/Libraries/curl
export BZIP2=$WRF_DIRI/Libraries/bzip2
export LIBFABRIC=$WRF_DIRI/Libraries/libfabric
export PROJ=$WRF_DIRI/Libraries/proj
export OPENJPEG=$WRF_DIRI/Libraries/openjpeg
export JPEG=$WRF_DIRI/Libraries/jpeg
export ECCODES=$WRF_DIRI/Libraries/eccodes
export ARPACK=$WRF_DIRI/Libraries/arpack
export OPENMPI=$WRF_DIRI/Libraries/openmpi
export FLEX=$WRF_DIRI/Libraries/flex
export BISON=$WRF_DIRI/Libraries/bison
export M4=$WRF_DIRI/Libraries/m4
export PERL=$WRF_DIRI/Libraries/perl
export LIBTOOL=$WRF_DIRI/Libraries/libtool
export CDO=$WRF_DIRI/Libraries/cdo

# Compiler settings
export CC=$OPENMPI/bin/mpicc
export CXX=$OPENMPI/bin/mpicxx
export FC=$OPENMPI/bin/mpif90
export F77=$OPENMPI/bin/mpif77

# MPI settings
export MPICC=$OPENMPI/bin/mpicc
export MPICXX=$OPENMPI/bin/mpicxx
export MPIFC=$OPENMPI/bin/mpif90
export MPIF77=$OPENMPI/bin/mpif77
export MPIF90=$OPENMPI/bin/mpif90

# Library paths for linking
export LD_LIBRARY_PATH=$NETCDF/lib:$HDF5/lib:$PNETCDF/lib:$JASPER/lib:$LIBPNG/lib:$ZLIB/lib:$SZIP/lib:$CURL/lib:$BZIP2/lib:$LIBFABRIC/lib:$PROJ/lib:$OPENJPEG/lib:$JPEG/lib:$ECCODES/lib:$ARPACK/lib:$OPENMPI/lib:$FLEX/lib:$BISON/lib:$M4/lib:$PERL/lib:$LIBTOOL/lib:$CDO/lib:$LD_LIBRARY_PATH
export PATH=$NETCDF/bin:$HDF5/bin:$PNETCDF/bin:$JASPER/bin:$LIBPNG/bin:$ZLIB/bin:$SZIP/bin:$CURL/bin:$BZIP2/bin:$LIBFABRIC/bin:$PROJ/bin:$OPENJPEG/bin:$JPEG/bin:$ECCODES/bin:$ARPACK/bin:$OPENMPI/bin:$FLEX/bin:$BISON/bin:$M4/bin:$PERL/bin:$LIBTOOL/bin:$CDO/bin:$PATH
export PKG_CONFIG_PATH=$NETCDF/lib/pkgconfig:$HDF5/lib/pkgconfig:$PNETCDF/lib/pkgconfig:$JASPER/lib/pkgconfig:$LIBPNG/lib/pkgconfig:$ZLIB/lib/pkgconfig:$SZIP/lib/pkgconfig:$CURL/lib/pkgconfig:$BZIP2/lib/pkgconfig:$LIBFABRIC/lib/pkgconfig:$PROJ/lib/pkgconfig:$OPENJPEG/lib/pkgconfig:$JPEG/lib/pkgconfig:$ECCODES/lib/pkgconfig:$ARPACK/lib/pkgconfig:$OPENMPI/lib/pkgconfig:$FLEX/lib/pkgconfig:$BISON/lib/pkgconfig:$M4/lib/pkgconfig:$PERL/lib/pkgconfig:$LIBTOOL/lib/pkgconfig:$CDO/lib/pkgconfig:$PKG_CONFIG_PATH

# WRF specific variables
export WRFIO_NCD_LARGE_FILE_SUPPORT=1
export WRF_EM_CORE=1
export WRF_NMM_CORE=0
export WRF_CHEM=1
export WRF_KPP=1
export WRF_SOLAR=1

# Optimization flags
export CPPFLAGS="-I$HDF5/include -I$NETCDF/include -I$PNETCDF/include -I$JASPER/include -I$LIBPNG/include -I$ZLIB/include -I$SZIP/include -I$CURL/include -I$BZIP2/include -I$LIBFABRIC/include -I$PROJ/include -I$OPENJPEG/include -I$JPEG/include -I$ECCODES/include -I$ARPACK/include -I$OPENMPI/include -I$FLEX/include -I$BISON/include -I$M4/include -I$PERL/include -I$LIBTOOL/include -I$CDO/include"
export LDFLAGS="-L$HDF5/lib -L$NETCDF/lib -L$PNETCDF/lib -L$JASPER/lib -L$LIBPNG/lib -L$ZLIB/lib -L$SZIP/lib -L$CURL/lib -L$BZIP2/lib -L$LIBFABRIC/lib -L$PROJ/lib -L$OPENJPEG/lib -L$JPEG/lib -L$ECCODES/lib -L$ARPACK/lib -L$OPENMPI/lib -L$FLEX/lib -L$BISON/lib -L$M4/lib -L$PERL/lib -L$LIBTOOL/lib -L$CDO/lib"


# Source the environment
source /home/shared/WRF/wrf_env.sh

# Install system dependencies
sudo dnf install -y gcc gcc-gfortran gcc-c++ \
    tcsh time wget which zlib-devel \
    libpng-devel jasper-devel \
    ksh m4 ncl-devel \
    python3-devel python3-numpy \
    curl-devel libxml2-devel \
    flex-devel bison byacc \
    libjpeg-turbo-devel \
    make automake autoconf \
    unzip tar gzip bzip2 \
    cmake pkgconf-pkg-config \
    openmpi-devel mpich-devel \
    perl perl-devel perl-ExtUtils-MakeMaker \
    fontconfig-devel libX11-devel libXext-devel libXrender-devel

# Load OpenMPI module if available
module load mpi/openmpi-x86_64 || true

# Install additional libraries
cd /home/shared/WRF/Downloads

# 1. Install ZLIB
wget https://zlib.net/zlib-1.3.1.tar.gz
tar -xzf zlib-1.3.1.tar.gz
cd zlib-1.3.1
./configure --prefix=$ZLIB
make -j$(nproc)
make install
cd ..

# 2. Install libpng
wget https://downloads.sourceforge.net/libpng/libpng-1.6.39.tar.xz
tar -xf libpng-1.6.39.tar.xz
cd libpng-1.6.39
./configure --prefix=$LIBPNG
make -j$(nproc)
make install
cd ..

# 3. Install JasPer
wget https://github.com/jasper-software/jasper/archive/refs/tags/version-2.0.33.tar.gz -O jasper-2.0.33.tar.gz
tar -xzf jasper-2.0.33.tar.gz
cd jasper-version-2.0.33
mkdir build && cd build
cmake .. -DCMAKE_INSTALL_PREFIX=$JASPER
make -j$(nproc)
make install
cd ../..

# 4. Install SZIP
wget https://support.hdfgroup.org/ftp/lib-external/szip/2.1.1/src/szip-2.1.1.tar.gz
tar -xzf szip-2.1.1.tar.gz
cd szip-2.1.1
./configure --prefix=$SZIP
make -j$(nproc)
make install
cd ..

# 5. Install bzip2
wget https://sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz
tar -xzf bzip2-1.0.8.tar.gz
cd bzip2-1.0.8
make -j$(nproc)
make install PREFIX=$BZIP2
cd ..

# 6. Install curl
wget https://curl.se/download/curl-8.4.0.tar.gz
tar -xzf curl-8.4.0.tar.gz
cd curl-8.4.0
./configure --prefix=$CURL --with-zlib=$ZLIB
make -j$(nproc)
make install
cd ..

# 7. Install libfabric
wget https://github.com/ofiwg/libfabric/releases/download/v1.16.0/libfabric-1.16.0.tar.bz2
tar -xjf libfabric-1.16.0.tar.bz2
cd libfabric-1.16.0
./configure --prefix=$LIBFABRIC
make -j$(nproc)
make install
cd ..

# 8. Install proj
wget https://download.osgeo.org/proj/proj-4.9.3.tar.gz
tar -xzf proj-4.9.3.tar.gz
cd proj-4.9.3
./configure --prefix=$PROJ
make -j$(nproc)
make install
cd ..

# 9. Install JPEG
wget http://www.ijg.org/files/jpegsrc.v9e.tar.gz
tar -xzf jpegsrc.v9e.tar.gz
cd jpeg-9e
./configure --prefix=$JPEG
make -j$(nproc)
make install
cd ..

# 10. Install openjpeg
wget https://github.com/uclouvain/openjpeg/archive/v2.1.2.tar.gz -O openjpeg-2.1.2.tar.gz
tar -xzf openjpeg-2.1.2.tar.gz
cd openjpeg-2.1.2
mkdir build && cd build
cmake .. -DCMAKE_INSTALL_PREFIX=$OPENJPEG
make -j$(nproc)
make install
cd ../..

# 11. Install m4
wget https://ftp.gnu.org/gnu/m4/m4-1.4.19.tar.gz
tar -xzf m4-1.4.19.tar.gz
cd m4-1.4.19
./configure --prefix=$M4
make -j$(nproc)
make install
cd ..

# 12. Install perl
wget https://www.cpan.org/src/5.0/perl-5.38.0.tar.gz
tar -xzf perl-5.38.0.tar.gz
cd perl-5.38.0
./Configure -des -Dprefix=$PERL
make -j$(nproc)
make install
cd ..

# 13. Install libtool
wget https://ftp.gnu.org/gnu/libtool/libtool-2.4.7.tar.gz
tar -xzf libtool-2.4.7.tar.gz
cd libtool-2.4.7
./configure --prefix=$LIBTOOL
make -j$(nproc)
make install
cd ..

# 14. Install flex
wget https://github.com/westes/flex/releases/download/v2.6.4/flex-2.6.4.tar.gz
tar -xzf flex-2.6.4.tar.gz
cd flex-2.6.4
./configure --prefix=$FLEX
make -j$(nproc)
make install
cd ..

# 15. Install bison
wget https://ftp.gnu.org/gnu/bison/bison-3.0.tar.gz
tar -xzf bison-3.0.tar.gz
cd bison-3.0
./configure --prefix=$BISON
make -j$(nproc)
make install
cd ..

# 16. Install OpenMPI
wget https://download.open-mpi.org/release/open-mpi/v5.0/openmpi-5.0.0.tar.gz
tar -xzf openmpi-5.0.0.tar.gz
cd openmpi-5.0.0
./configure --prefix=$OPENMPI
make -j$(nproc)
make install
cd ..

# 17. Install HDF5
wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.14/hdf5-1.14.3/src/hdf5-1.14.3.tar.gz
tar -xzf hdf5-1.14.3.tar.gz
cd hdf5-1.14.3
./configure --prefix=$HDF5 \
    --enable-fortran \
    --enable-hl \
    --enable-shared \
    --with-szlib=$SZIP \
    CC=$OPENMPI/bin/mpicc \
    FC=$OPENMPI/bin/mpif90
make -j$(nproc)
make install
cd ..

# 18. Install Parallel NetCDF
wget https://parallel-netcdf.github.io/Release/pnetcdf-1.12.3.tar.gz
tar -xzf pnetcdf-1.12.3.tar.gz
cd pnetcdf-1.12.3
./configure --prefix=$PNETCDF \
    CC=$OPENMPI/bin/mpicc \
    CXX=$OPENMPI/bin/mpicxx \
    FC=$OPENMPI/bin/mpif90 \
    F77=$OPENMPI/bin/mpif77
make -j$(nproc)
make install
cd ..

# 19. Install NetCDF-C
wget https://downloads.unidata.ucar.edu/netcdf-c/4.9.2/netcdf-c-4.9.2.tar.gz
tar -xzf netcdf-c-4.9.2.tar.gz
cd netcdf-c-4.9.2
./configure --prefix=$NETCDF \
    --enable-netcdf-4 \
    --enable-shared \
    --enable-pnetcdf \
    --disable-dap \
    CC=$OPENMPI/bin/mpicc \
    CPPFLAGS="-I$HDF5/include -I$PNETCDF/include -I$SZIP/include" \
    LDFLAGS="-L$HDF5/lib -L$PNETCDF/lib -L$SZIP/lib"
make -j$(nproc)
make install
cd ..

# 20. Install NetCDF-Fortran
wget https://downloads.unidata.ucar.edu/netcdf-fortran/4.6.1/netcdf-fortran-4.6.1.tar.gz
tar -xzf netcdf-fortran-4.6.1.tar.gz
cd netcdf-fortran-4.6.1
./configure --prefix=$NETCDF \
    --enable-shared \
    CC=$OPENMPI/bin/mpicc \
    FC=$OPENMPI/bin/mpif90 \
    F77=$OPENMPI/bin/mpif77 \
    CPPFLAGS="-I$NETCDF/include -I$HDF5/include -I$SZIP/include" \
    LDFLAGS="-L$NETCDF/lib -L$HDF5/lib -L$SZIP/lib"
make -j$(nproc)
make install
cd ..

# 21. Install eccodes
wget https://confluence.ecmwf.int/download/attachments/45757960/eccodes-2.32.0-Source.tar.gz
tar -xzf eccodes-2.32.0-Source.tar.gz
cd eccodes-2.32.0-Source
mkdir build && cd build
cmake .. -DCMAKE_INSTALL_PREFIX=$ECCODES -DENABLE_JPG=ON -DENABLE_PNG=ON -DENABLE_NETCDF=ON
make -j$(nproc)
make install
cd ../..

# 22. Install arpack
wget https://github.com/opencollab/arpack-ng/archive/refs/tags/3.8.0.tar.gz -O arpack-3.8.0.tar.gz
tar -xzf arpack-3.8.0.tar.gz
cd arpack-ng-3.8.0
./configure --prefix=$ARPACK \
    CC=$OPENMPI/bin/mpicc \
    FC=$OPENMPI/bin/mpif90
make -j$(nproc)
make install
cd ..

# 23. Install cdo
wget https://code.mpimet.mpg.de/attachments/download/28876/cdo-2.2.1.tar.gz
tar -xzf cdo-2.2.1.tar.gz
cd cdo-2.2.1
./configure --prefix=$CDO \
    --with-netcdf=$NETCDF \
    --with-hdf5=$HDF5 \
    --with-eccodes=$ECCODES \
    --with-proj=$PROJ
make -j$(nproc)
make install
cd ..

# Install WRF
cd /home/shared/WRF/Downloads
wget https://github.com/wrf-model/WRF/releases/download/v4.5.2/v4.5.2.tar.gz -O WRF-4.5.2.tar.gz
tar -xzf WRF-4.5.2.tar.gz -C /home/shared/WRF/WRF-4.5.2 --strip-components=1
cd /home/shared/WRF/WRF-4.5.2
./configure <<EOF
34
1
EOF
./compile em_real
make install

# Install WPS
cd /home/shared/WRF/Downloads
wget https://github.com/wrf-model/WPS/archive/refs/tags/v4.5.tar.gz -O WPS-4.5.tar.gz
tar -xzf WPS-4.5.tar.gz -C /home/shared/WRF/WPS-4.5 --strip-components=1
cd /home/shared/WRF/WPS-4.5
./configure <<EOF
3
EOF
./compile
make install

# Install WRF-CHEM
cd /home/shared/WRF/Downloads
wget https://github.com/wrf-model/WRF/releases/download/v4.5.2/v4.5.2.tar.gz -O WRF-CHEM-4.5.2.tar.gz
tar -xzf WRF-CHEM-4.5.2.tar.gz -C /home/shared/WRF/WRF-CHEM-4.5.2 --strip-components=1
cd /home/shared/WRF/WRF-CHEM-4.5.2
export WRF_CHEM=1
export WRF_KPP=1
./configure <<EOF
34
1
EOF
./compile em_real
make install

# Install WRF-SOLAR
cd /home/shared/WRF/Downloads
wget https://github.com/wrf-model/WRF/releases/download/v4.5.2/v4.5.2.tar.gz -O WRF-SOLAR-4.5.2.tar.gz
tar -xzf WRF-SOLAR-4.5.2.tar.gz -C /home/shared/WRF/WRF-SOLAR-4.5.2 --strip-components=1
cd /home/shared/WRF/WRF-SOLAR-4.5.2
export WRF_SOLAR=1
./configure <<EOF
34
1
EOF
./compile em_real
make install
